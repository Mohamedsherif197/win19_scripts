#Update Microsoft Edge to version 117.0.2045.36 if Microsoft edge exists on machine.

# Check if Microsoft Edge is installed
$edgeApp = Get-AppxPackage -Name Microsoft.MicrosoftEdge

if ($edgeApp) {
    Write-Output "Microsoft Edge is installed."
    Invoke-WebRequest -Uri "https://go.microsoft.com/fwlink/?linkid=2109047&Channel=Stable&language=en&brand=M100" -OutFile "$env:USERPROFILE\Downloads\MicrosoftEdgeSetup.exe"

    #Start-Process -FilePath "$env:USERPROFILE\Downloads\MicrosoftEdgeSetup.exe" -ArgumentList "/S" -Wait

    $installerPath = "$env:USERPROFILE\Downloads\MicrosoftEdgeSetup.exe"

    # Create a process start info object
    $psi = New-Object System.Diagnostics.ProcessStartInfo
    $psi.FileName = $installerPath

    # Set the process start info properties to run the installation silently without prompts
    $psi.UseShellExecute = $false
    $psi.RedirectStandardOutput = $true
    $psi.RedirectStandardError = $true
    $psi.WindowStyle = 'Hidden'

    # Start the installation process
    $process = [System.Diagnostics.Process]::Start($psi)

    # Wait for the process to complete
    $process.WaitForExit()

    # Check the exit code to determine if the installation was successful
    if ($process.ExitCode -eq 0) {
        Write-Output "Installation completed successfully."
    } else {
        Write-Output "Installation failed with exit code $($process.ExitCode)."
    }

} else {
    Write-Output "Microsoft Edge is not installed."
}


======================================================================================================================================================================================================================================

$edgeVersion = (Get-ItemProperty 'HKCU:\SOFTWARE\Microsoft\Edge\BLBeacon' -Name 'version').version
$edgeVersion

========================================================================================
$targetVersion = [Version]"118.0.2088.78"
$currentVersion = [Version]"117.0.2000.50"

if ($currentVersion -lt $targetVersion) {
    # The current version is less than the target version
    return $true
} else {
    # The current version is equal to or greater than the target version
    return $false
}
