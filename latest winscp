%latest:
$winscpPath = Get-Command winscp.exe -ErrorAction SilentlyContinue | Select-Object -ExpandProperty Source

if ($winscpPath) {
    $versionInfo = (Get-Item $winscpPath).VersionInfo
    $winSCPVersion = $versionInfo.FileVersion
    $truncatedVersion = $winSCPVersion -replace '\.\d+$'
    $currentVersion = $truncatedVersion
    Write-Host "WinSCP version: $currentVersion"
} else {
    Write-Host "WinSCP is not installed."
}

if ($winscpPath) {
   
    Write-Host "WinSCP is installed."
    Write-Host "WinSCP Version: $currentVersion"
    $targetVersion = [Version]"6.1.2"


    if ($currentVersion.Major -lt $targetVersion.Major) {
        # The current version's major component is less than the target version's major component
        $result = $true
    }
    elseif ($currentVersion.Major -eq $targetVersion.Major -and $currentVersion.Minor -lt $targetVersion.Minor) {
        # The current version's major component is equal to the target version's major component,
        # but the current version's minor component is less than the target version's minor component
        $result = $true
    }
    elseif ($currentVersion.Major -eq $targetVersion.Major -and $currentVersion.Minor -eq $targetVersion.Minor -and $currentVersion.Build -lt $targetVersion.Build) {
        # The current version's major and minor components are equal to the target version's major and minor components,
        # but the current version's build component is less than the target version's build component
        $result = $true
    }
    elseif ($currentVersion.Major -eq $targetVersion.Major -and $currentVersion.Minor -eq $targetVersion.Minor -and $currentVersion.Build -eq $targetVersion.Build -and $currentVersion.Revision -lt $targetVersion.Revision) {
        # The current version's major, minor, and build components are equal to the target version's major, minor, and build components,
        # but the current version's revision component is less than the target version's revision component
        $result = $true
    }
    else {
        # The current version is equal to or greater than the target version
        $result = $false
    }

    if ($result -eq $true) {
        Write-Output "Update will be performed"
        $downloadUrl = 'https://downloads.sourceforge.net/project/winscp/WinSCP/6.1.2/WinSCP-6.1.2-Setup.exe?use_mirror=versaweb&r=https%3A%2F%2Fsourceforge.net%2Fprojects%2Fwinscp%2Ffiles%2FWinSCP%2F6.1.2%2FWinSCP-6.1.2-Setup.exe%2Fdownload'
        $downloadPath = Join-Path $env:USERPROFILE 'Downloads\WinSCP-Setup.exe'

        $webClient = New-Object System.Net.WebClient
        $webClient.DownloadFile($downloadUrl, $downloadPath)

        Write-Host "Download complete."

        # Install WinSCP
        $installArgs = '/SP- /VERYSILENT /SUPPRESSMSGBOXES /NORESTART'
        $process = Start-Process -FilePath $downloadPath -ArgumentList $installArgs -PassThru
        $process.WaitForExit()

        Write-Host "WinSCP installation complete."

        # Clean up the downloaded installer
        Remove-Item $downloadPath -Force       
        }

    else {Write-Output "Up to date"}
} else {
    Write-Host "Windows SCP is not installed."
}
